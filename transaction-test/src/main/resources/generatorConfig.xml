<?xml version="1.0" encoding="UTF-8"?>
<!-- 使用方法： 直接通过运行maven插件来生成相应的model, mapper及xml
maven命令： mybatis-generator:generate -Dmybatis.generator.overwrite=true
-->
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
  <properties resource="generator.properties"/>

  <context defaultModelType="flat" id="Mariadb" targetRuntime="MyBatis3Simple">
    <property name="beginningDelimiter" value="`"/>
    <property name="endingDelimiter" value="`"/>

    <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
      <property name="mappers" value="io.deepblueai.magic.mirror.config.starter.mybatis.basemapper.CommonMapper"/>
    </plugin>

    <jdbcConnection connectionURL="${spring.datasource.url}"
      driverClass="${spring.datasource.driver-class-name}"
      password="${spring.datasource.password}"
      userId="${spring.datasource.username}">
    </jdbcConnection>

    <javaModelGenerator targetPackage="${targetModelPackage}" targetProject="${targetJavaProject}"/>

    <sqlMapGenerator targetPackage="${targetXMLPackage}" targetProject="${targetResourcesProject}"/>

    <javaClientGenerator targetPackage="${targetMapperPackage}" targetProject="${targetJavaProject}"
      type="XMLMAPPER"/>

    <table domainObjectName="CmAccount" tableName="t_cm_account">
      <property name="useActualColumnNames" value="false"/>
      <generatedKey column="id" identity="true" sqlStatement="Mysql"/>
    </table>




  </context>
</generatorConfiguration>
